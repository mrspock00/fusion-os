/*
 * Copyright 2019 Haiku, Inc. All rights reserved.
 * Distributed under the terms of the MIT License.
 *
 * Authors:
 *		Niels Sascha Reedijk, niels.reedijk@gmail.com
 *
 * Corresponds to:
 *		headers/os/app/Notification.h	hrev51445
 *		src/kits/app/Notification.cpp	hrev52287
 */


 /*!
	\file Notification.h
	\ingroup app
	\ingroup libbe
	\brief Provides BNotification class and the notification_type enum.
*/


///// notification_type enum /////


/*!
    \enum notification_type
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\var notification_type::B_INFORMATION_NOTIFICATION
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\var notification_type::B_IMPORTANT_NOTIFICATION
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\var notification_type::B_ERROR_NOTIFICATION
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\var notification_type::B_PROGRESS_NOTIFICATION
    \brief Undocumented

    \since Haiku R1
*/


///// BNotification class /////


/*!
    \class BNotification
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn BNotification::BNotification(notification_type type)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn BNotification::BNotification(BMessage* archive)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn virtual BNotification::~BNotification()
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn status_t BNotification::InitCheck() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn static BArchivable* BNotification::Instantiate(BMessage* archive)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn virtual status_t BNotification::Archive(BMessage* archive,
        bool deep = true) const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn const char* BNotification::SourceSignature() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn const char* BNotification::SourceName() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn notification_type BNotification::Type() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn const char* BNotification::Group() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn void BNotification::SetGroup(const BString& group)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn const char* BNotification::Title() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn void BNotification::SetTitle(const BString& title)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn const char* BNotification::Content() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn void BNotification::SetContent(const BString& content)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn const char* BNotification::MessageID() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn void BNotification::SetMessageID(const BString& id)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn float BNotification::Progress() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn void BNotification::SetProgress(float progress)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn const char* BNotification::OnClickApp() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn void BNotification::SetOnClickApp(const BString& app)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn const entry_ref* BNotification::OnClickFile() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn status_t BNotification::SetOnClickFile(const entry_ref* file)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn status_t BNotification::AddOnClickRef(const entry_ref* ref)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn int32 BNotification::CountOnClickRefs() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn const entry_ref* BNotification::OnClickRefAt(int32 index) const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn status_t BNotification::AddOnClickArg(const BString& arg)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn int32 BNotification::CountOnClickArgs() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn const char* BNotification::OnClickArgAt(int32 index) const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn const BBitmap* BNotification::Icon() const
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn status_t BNotification::SetIcon(const BBitmap* icon)
    \brief Undocumented

    \since Haiku R1
*/


/*!
	\fn status_t BNotification::Send(bigtime_t timeout = -1)
    \brief Undocumented

    \since Haiku R1
*/
