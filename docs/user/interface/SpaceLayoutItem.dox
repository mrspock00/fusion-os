/*
 * Copyright 2019 Haiku, Inc. All rights reserved.
 * Distributed under the terms of the MIT License.
 *
 * Authors:
 *		Name, email@email.com
 *
 * Corresponds to:
 *		headers/os/interface/SpaceLayoutItem.h	hrev43514
 *		src/kits/interface/SpaceLayoutItem.cpp	hrev44346
 */


/*!
	\file SpaceLayoutItem.h
	\ingroup layout
	\brief Undocumented file.

	\since Haiku R1
*/


/*!
	\class BSpaceLayoutItem
	\ingroup layout
	\ingroup libbe
	\brief Undocumented class.

	\since Haiku R1
*/


/*!
	\fn BSpaceLayoutItem::BSpaceLayoutItem(BSize minSize, BSize maxSize, BSize preferredSize, BAlignment alignment)
	\brief Undocumented public method

	\param minSize Undocumented
	\param maxSize Undocumented
	\param preferredSize Undocumented
	\param alignment Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BSpaceLayoutItem::BSpaceLayoutItem(BMessage *archive)
	\brief Undocumented public method

	\param archive Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual BSpaceLayoutItem::~BSpaceLayoutItem()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual BSize BSpaceLayoutItem::MinSize()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual BSize BSpaceLayoutItem::MaxSize()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual BSize BSpaceLayoutItem::PreferredSize()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual BAlignment BSpaceLayoutItem::Alignment()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual void BSpaceLayoutItem::SetExplicitMinSize(BSize size)
	\brief Undocumented public method

	\param size Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual void BSpaceLayoutItem::SetExplicitMaxSize(BSize size)
	\brief Undocumented public method

	\param size Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual void BSpaceLayoutItem::SetExplicitPreferredSize(BSize size)
	\brief Undocumented public method

	\param size Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual void BSpaceLayoutItem::SetExplicitAlignment(BAlignment alignment)
	\brief Undocumented public method

	\param alignment Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual bool BSpaceLayoutItem::IsVisible()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual void BSpaceLayoutItem::SetVisible(bool visible)
	\brief Undocumented public method

	\param visible Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual BRect BSpaceLayoutItem::Frame()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual void BSpaceLayoutItem::SetFrame(BRect frame)
	\brief Undocumented public method

	\param frame Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual virtual status_t BSpaceLayoutItem::Archive(BMessage *into, bool deep=true) const
	\brief Undocumented public method

	\param into Undocumented
	\param deep Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn static static BSpaceLayoutItem* BSpaceLayoutItem::CreateGlue()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn static static BSpaceLayoutItem* BSpaceLayoutItem::CreateHorizontalStrut(float width)
	\brief Undocumented public method

	\param width Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn static static BSpaceLayoutItem* BSpaceLayoutItem::CreateVerticalStrut(float height)
	\brief Undocumented public method

	\param height Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn static static BArchivable* BSpaceLayoutItem::Instantiate(BMessage *from)
	\brief Undocumented public method

	\param from Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/
