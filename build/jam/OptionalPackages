# This file defines the optional packages that can be added to the Haiku image.
# It is directly included from HaikuImage -- all variables defined there can
# be used.

# Available Optional Packages:
#	BeOSCompatibility		- creates links within the system to support old apps
#	Development				- more complete dev environment (including autotools)
#	DevelopmentBase			- basic development environment (gcc, headers, libs,...)
#	DevelopmentMin			- development headers, libs, tools, from sources only
#	Git						- the distributed version control system
#	WebPositive				- native, WebKit-based web browser
#	Welcome					- introductory documentation to Haiku


# dependencies between optional packages
OptionalPackageDependencies Development : DevelopmentBase ;
OptionalPackageDependencies DevelopmentBase : DevelopmentMin ;
OptionalPackageDependencies DevelopmentPowerPC : DevelopmentMin ;
OptionalPackageDependencies NetFS : UserlandFS ;


# Haiku sources
if $(HAIKU_INCLUDE_SOURCES) = 1 {
	AddPackageFilesToHaikuImage system
		:
		haiku_source.hpkg
		:
		nameFromMetaInfo
		;
}


# BeBook
if [ IsOptionalHaikuImagePackageAdded BeBook ] {
	AddHaikuImagePackages be_book ;
	AddSymlinkToHaikuImage home Desktop
		: /boot/system/documentation/BeBook/index.html
		: BeBook ;
}


# BeOSCompatibility
if [ IsOptionalHaikuImagePackageAdded BeOSCompatibility ] {
	if $(TARGET_ARCH) != x86 {
		Echo "No optional package BeOSCompatibility available for"
			"$(TARGET_ARCH)" ;
	} else if $(TARGET_GCC_VERSION_$(TARGET_PACKAGING_ARCH)[1]) >= 4 {
		Echo "No optional package BeOSCompatibility available for gcc4" ;
	} else {
		Echo "Warning: Adding BeOS compatibility symlinks. This will go away."
			"Please fix your apps!" ;
		AddSymlinkToHaikuImage beos : ../system/apps ;
		AddSymlinkToHaikuImage beos : ../system/bin ;
		AddSymlinkToHaikuImage beos
			: ../system/documentation ;
		AddSymlinkToHaikuImage beos : ../system/settings/etc ;
		AddSymlinkToHaikuImage beos : ../system/preferences ;
		AddSymlinkToHaikuImage beos : ../system ;
		AddDirectoryToHaikuImage var ;
		AddSymlinkToHaikuImage var : /boot/system/var/log ;
		AddSymlinkToHaikuImage var : /boot/system/cache/tmp ;
	}
}


# Development
if [ IsOptionalHaikuImagePackageAdded Development ] {
	# autotools and perl
	AddHaikuImagePackages autoconf automake perl texinfo ;
	AddHaikuImageSourcePackages autoconf automake texinfo ;

	# some other build tools
	AddHaikuImagePackages pkgconfig scons ;
	AddHaikuImageSourcePackages pkgconfig ;

	# devel packages for some of the base set
	local architectureObject ;
	for architectureObject in [ MultiArchSubDirSetup ] {
		on $(architectureObject) {
			AddHaikuImagePackages curl_devel glu_devel jpeg_devel
				libpng16_devel zlib_devel ;
		}
	}
}


# DevelopmentBase
if [ IsOptionalHaikuImagePackageAdded DevelopmentBase ] {
	# gcc and binutils (for all target architectures)
	local architectureObject ;
	for architectureObject in [ MultiArchSubDirSetup ] {
		on $(architectureObject) {
			AddHaikuImagePackages binutils gcc ;
			AddHaikuImageSourcePackages binutils gcc ;
		}
	}

	# other commonly used tools
	AddHaikuImagePackages bison cdrtools flex jam m4 make mkdepend nasm patch ;
	AddHaikuImageSourcePackages bison cdrtools m4 make patch ;
}


# DevelopmentMin
if [ IsOptionalHaikuImagePackageAdded DevelopmentMin ]
		&& ( $(TARGET_ARCH) = x86 || $(TARGET_ARCH) = x86_64 ) {
	AddPackageFilesToHaikuImage system
		:
		haiku_devel.hpkg
		haiku_$(TARGET_PACKAGING_ARCHS[2-])_devel.hpkg
		:
		nameFromMetaInfo
		;

	if $(HAIKU_IS_BOOTSTRAP) != 1 {
		AddPackageFilesToHaikuImage system
			:
			makefile_engine.hpkg
			:
			nameFromMetaInfo
			;
	}
}


# Git
if [ IsOptionalHaikuImagePackageAdded Git ] {
	AddHaikuImagePackages git git_daemon ;
	AddHaikuImageSourcePackages git ;
}


# WebPositive
if [ IsOptionalHaikuImagePackageAdded WebPositive ] {
	local architectureObject ;
	for architectureObject in [ MultiArchSubDirSetup ] {
		on $(architectureObject) {
			if [ FIsBuildFeatureEnabled webpositive ] {
				AddPackageFilesToHaikuImage system : webpositive.hpkg
					: nameFromMetaInfo ;
				break ;
			}
		}
	}
}


# Welcome
if [ IsOptionalHaikuImagePackageAdded Welcome ] {
	AddPackageFilesToHaikuImage system : haiku_userguide_ca.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_de.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_en.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_es.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_fi.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_fr.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_hu.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_it.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_jp.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_pl.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_pt_BR.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_pt_PT.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_ru.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_sk.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_sv_SE.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_uk.hpkg
		: nameFromMetaInfo ;
	AddPackageFilesToHaikuImage system : haiku_userguide_zh_CN.hpkg
		: nameFromMetaInfo ;

	AddPackageFilesToHaikuImage system : haiku_welcome.hpkg : nameFromMetaInfo ;

	AddSymlinkToHaikuImage home Desktop	: /boot/system/bin/quicktour
		: Quick\ Tour ;

	AddSymlinkToHaikuImage home Desktop	: /boot/system/bin/userguide
		: User\ Guide ;
}
