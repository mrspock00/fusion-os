local architecture = $(TARGET_PACKAGING_ARCH) ;


local haikuPackage = haiku_$(architecture).hpkg ;
HaikuPackage $(haikuPackage) ;


# libs
AddLibrariesToPackage lib $(architecture)
	: [ HaikuImageGetSystemLibs ] [ HaikuImageGetPrivateSystemLibs ] ;

# libnetwork.so replaces quite a few libraries
if $(HAIKU_GCC_VERSION_$(architecture)[1]) = 2 {
	local libNetworkAliases = libsocket.so libbind.so libnet.so ;
	local lib ;
	for lib in $(libNetworkAliases) {
		AddSymlinkToPackage lib $(architecture) : libnetwork.so : $(lib) ;
	}

	AddSymlinkToPackage lib $(architecture) : libbnetapi.so : libnetapi.so ;
}


# # add-ons
local addOnsDir = add-ons $(architecture) ;
#
# AddFilesToPackage $(addOnsDir) accelerants
# 	: $(SYSTEM_ADD_ONS_ACCELERANTS) ;
AddFilesToPackage $(addOnsDir) Translators
	: [ MultiArchDefaultGristFiles $(SYSTEM_ADD_ONS_TRANSLATORS) ] ;
# AddFilesToPackage $(addOnsDir) locale catalogs
# 	: $(SYSTEM_ADD_ONS_LOCALE_CATALOGS) ;
#
AddFilesToPackage $(addOnsDir) media : $(SYSTEM_ADD_ONS_MEDIA) ;
AddFilesToPackage $(addOnsDir) media plugins
	: [ MultiArchDefaultGristFiles $(SYSTEM_ADD_ONS_MEDIA_PLUGINS) ] ;
#
# AddFilesToPackage $(addOnsDir) disk_systems
# 	: <disk_system>intel <disk_system>gpt <disk_system>bfs <disk_system>ntfs ;


BuildHaikuPackage $(haikuPackage) : haiku_secondary ;
