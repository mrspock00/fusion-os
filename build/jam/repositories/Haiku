# Builds the Haiku packages repository.

local haikuRepository = <repository>Haiku ;
MakeLocate $(haikuRepository)
	: $(HAIKU_PACKAGE_REPOSITORIES_DIR_$(HAIKU_PACKAGING_ARCH)) ;

local repoInfo = <repository-info-template>haiku ;
SEARCH on $(repoInfo) = $(HAIKU_TOP)/src/data/repository_infos ;

local secondaryArchs = $(TARGET_PACKAGING_ARCHS[2-]) ;
local packages = [ FFilterByBuildFeatures
	haiku
	haiku_devel
	haiku_loader

	haiku_$(secondaryArchs)
	haiku_$(secondaryArchs)_devel
	] ;

if $(HAIKU_IS_BOOTSTRAP) != 1 && $(HAIKU_BUILD_TYPE) != minimum {
	packages += [ FFilterByBuildFeatures
		haiku_extras
		haiku_source
		haiku_userguide_ca
		haiku_userguide_de
		haiku_userguide_en
		haiku_userguide_es
		haiku_userguide_fi
		haiku_userguide_fr
		haiku_userguide_hu
		haiku_userguide_it
		haiku_userguide_jp
		haiku_userguide_pl
		haiku_userguide_pt_BR
		haiku_userguide_pt_PT
		haiku_userguide_ru
		haiku_userguide_sk
		haiku_userguide_sv_SE
		haiku_userguide_uk
		haiku_userguide_zh_CN
		haiku_welcome
		makefile_engine
		netfs
		userland_fs
		] ;
}

local webPositiveIsAvailable ;
local architectureObject ;
for architectureObject in [ MultiArchSubDirSetup ] {
	on $(architectureObject) {
		if [ FIsBuildFeatureEnabled webpositive ] {
			webPositiveIsAvailable = true ;
			break ;
		}
	}
}
if $(webPositiveIsAvailable) {
	packages += webpositive ;
}

HaikuRepository $(haikuRepository) : $(repoInfo) : $(packages:S=.hpkg) ;
