SubDir HAIKU_TOP src libs compat freebsd_network ;

UseHeaders [ FDirName $(SUBDIR) ] : true ;
UseHeaders [ FDirName $(SUBDIR) compat ] : true ;
UsePrivateHeaders net ;
UsePrivateKernelHeaders ;
UseHeaders $(HAIKU_PRIVATE_KERNEL_HEADERS) : true ;

# Enabling C++ structures in C only code
Includes [ FGristFiles kernel_c++_structs.h ]
	: <src!system!kernel>kernel_c++_struct_sizes.h ;

SubDirCcFlags [ FDefines _KERNEL=1 ] ;

KernelStaticLibrary libfreebsd_network.a :
	bus.cpp
	bus_dma.cpp
	callout.cpp
	clock.c
	condvar.c
	Condvar.cpp
	device.c
	device_hooks.c
	driver.c
	eventhandler.c
	fbsd_ether.c
	fbsd_if_media.c
	fbsd_kern_mbuf.c
	fbsd_uipc_mbuf.c
	fbsd_uipc_mbuf2.c
	fbsd_mii.c
	fbsd_mii_bitbang.c
	fbsd_mii_physubr.c
	fbsd_subr_bufring.c
	fbsd_subr_sbuf.c
	fbsd_time.c
	firmware.c
	if.c
	libkern.cpp
	malloc.cpp
	mbuf.c
	mii.c
	mutex.c
	priv.cpp
	smp.c
	subr_autoconf.cpp
	synch.c
	systm.cpp
	sysinit.c
	taskqueue.c
	unit.cpp
	;

rule MIIHeaderGen
{
	SEARCH on $(2) = [ FDirName $(SUBDIR) compat dev mii ] ;
	SEARCH on $(3) = [ FDirName $(SUBDIR) tools ] ;

	Depends $(1) : $(2) $(3) ;
	MakeLocateArch $(<) ;
	MIIHeaderGen1 $(1) : $(2) $(3) ;
	LocalClean clean : $(<) ;
}

actions MIIHeaderGen1
{
	gawk -v HEADERFILE=$(1) -f $(2[2]) $(2[1])
}

MIIHeaderGen [ FGristFiles miidevs.h ] : miidevs : miidevs2h.awk ;

rule USBDevsHeaderGen
{
    SEARCH on $(2) = [ FDirName $(SUBDIR) compat dev usb ] ;
	SEARCH on $(3) = [ FDirName $(SUBDIR) tools ] ;

    Depends $(1) : $(2) $(3) ;
	MakeLocateArch $(<) ;
	USBDevsHeaderGen1 $(1) : $(2) $(3) ;
	LocalClean clean : $(<) ;
}

actions USBDevsHeaderGen1
{
    gawk -v HEADERFILE=$(1[1]) -v DATAFILE=$(1[2]) -f $(2[2]) $(2[1])
}

USBDevsHeaderGen [ FGristFiles usbdevs.h usbdevs_data.h ] : usbdevs
    : usbdevs2h.awk ;
